@using Mastonet.Entities
@inject NavigationManager NavigationManager

@if (Node.IsRoot && !string.IsNullOrEmpty(Status.InReplyToId)) {
	<a class="button mb-2" href="@(NavigationManager.BaseUri + Instance)/@(Status.InReplyToId)">
		Open containing Context
	</a>
}
<div class="media">
	@if (Node.Children.Count > 0) {
		<div class="media-left @RepliesCssClass" style="width: 2px; align-self: normal; opacity: 0.25">
			<!-- Spacer -->
			<div class="has-background-grey-light" 
			     style="box-sizing: border-box; border-top: 1.5em solid blue; height: 100%">&nbsp;</div>
		</div>
	}
	<figure class="media-left is-hidden-mobile is-hidden-tablet-only">
		<p class="image is-48x48">
			<img src="@Status.Account.AvatarUrl" loading="lazy" alt="">
		</p>
	</figure>
	<div class="media-content">
		<div>
			<div>
				<strong style="white-space: nowrap">@Status.Account.DisplayName</strong>
				@if (!Node.IsRoot) {
					<a class="button is-small is-info mx-2" href="@(NavigationManager.BaseUri + Instance)/@(Status.Id)">
						Focus this Toot
					</a>
				}
				<br />
				<small style="white-space: nowrap">@@@Status.Account.AccountName</small>
			</div>
			<div class="content">
				@if(!string.IsNullOrEmpty(Status.SpoilerText)) {
					<CollapsableContent 
						ButtonClass="is-danger is-small is-outlined my-1" 
						CollapseLabel="@("CW: " + Status.SpoilerText)"
						IsHidden="true">
						<Content>
							<p class="my-2">
								@((MarkupString)Status.Content)
							</p>
						</Content>
					</CollapsableContent>
				} else {
					<p class="my-2">
						@((MarkupString)Status.Content)
					</p>
				}
				@if (Status.Poll != null) {
					<div class="box">
						@{ var options = Status.Poll.Options.ToList(); }
						@for (int i = 0; i < options.Count; i++) {
							var option = options[i];
							bool userHasVotedThis = Status.Poll.OwnVotes.Contains(i);
							<div>
								<p class="mt-1">
									<span class="is-size-5">@option.Title</span>
									<span class="level-left mr-1 is-size-6">@option.VotesCount Votes</span>
								</p>
								<p>
									<progress class="progress is-medium @(userHasVotedThis ? "is-primary" : "")"
									          value="@option.VotesCount"
									          max="@Status.Poll.VotesCount">
									</progress>
								</p>
							</div>
						}
						<p class="mt-1">
							<span>@Status.Poll.VotesCount votes</span> -
							@if (Status.Poll.Expired) {
								<span>Closed</span>
							} else if(Status.Poll.ExpiresAt.HasValue) {
								<span>Closes on @Status.Poll.ExpiresAt.Value.ToString("F")</span>
							}
						</p>
					</div>
				}
			</div>
			<div class="columns is-multiline is-vcentered">
				@foreach (var attachment in Status.MediaAttachments) {
					switch (attachment.Type) {
						case "image":
							<div class="column is-one-quarter">
								<figure class="image @SensitiveClass">
									<img src="@attachment.PreviewUrl" 
									     width="@attachment.Meta?.Small?.Width"
										 height="@attachment.Meta?.Small?.Height"
									     alt=""
									     loading="lazy" />
									<figcaption>@attachment.Description</figcaption>
								</figure>
							</div>
							break;
						case "video":
							<div class="column is-one-quarter">
								<figure class="image @SensitiveClass">
									<video src="@attachment.Url"
									       width="@attachment.Meta?.Small?.Width"
									       height="@attachment.Meta?.Small?.Height"
									       alt=""
									       controls>
										Your browser does not support the video tag. Here is the URL:
										<a href="@attachment.Url">@attachment.Url</a>
									</video>
									<figcaption>@attachment.Description</figcaption>
								</figure>
							</div>
							break;
						case "gifv":
							<div class="column is-one-quarter">
								<figure class="image @SensitiveClass">
									<video src="@attachment.Url"
									       width="@attachment.Meta?.Small?.Width"
									       height="@attachment.Meta?.Small?.Height"
									       alt=""
									       loop autoplay muted controls>
										Your browser does not support the video tag. Here is the URL:
										<a href="@attachment.Url">@attachment.Url</a>
									</video>
									<!-- we mute just in case... -->
									<figcaption>@attachment.Description</figcaption>
								</figure>
							</div>
							break;
						case "audio":
							<div class="column is-full">
								<audio>
									<source src="@attachment.Url" alt="@attachment.Description" />
									Your browser does not support the audio tag. Here is the URL:
									<a href="@attachment.Url">@attachment.Url</a>
								</audio>
							</div>
							break;
						default:
							<div clas="column is-full">
								<a href="@attachment.Url">@attachment.Url</a>
							</div>
							break;
					}
				}
			</div>
			<div class="level is-mobile">
				<span class="level-left">
					@if (Node.Children.Count > 0) {
						<button class="level-item button is-white has-text-primary" @onclick="ToggleReplyVisibility">
							@if (RepliesHidden) {
								<span>Show Replies</span>
							}
							else {
								<span>Hide Replies</span>
							}
						</button>
					} else {
						<button class="level-item button is-white has-text-grey" disabled>Hide Replies</button>
					}
					<span class="level-item">
						<i data-feather="corner-down-right" style="width: 1rem; margin-right: 0.2rem"></i>
						@Status.RepliesCount
					</span>
					<span class="level-item">
						<i data-feather="repeat" style="width: 1rem; margin-right: 0.2rem"></i>
						@Status.ReblogCount
					</span>
					<span class="level-item">
						<i data-feather="star" style="width: 1rem; margin-right: 0.2rem"></i>
						@Status.FavouritesCount
					</span>
				</span>
				<span class="level-right is-hidden-mobile">
					<small class="ml-2">@Status.CreatedAt</small>
				</span>
			</div>
			<div class="@RepliesCssClass">
				@if (Node.Children.Count > 0) {
					@foreach (var child in Node.Children) {
						<StatusTreeNodeComponent Node="@child" Instance="@Instance" />
					}
				}
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public string Instance { get; set; } = null!;
	[Parameter]
	public StatusTreeNode Node { get; set; } = null!;
	private Status Status => Node.Status;

	private string SensitiveClass => Status.Sensitive == true ? "is-sensitive" : "";

	private bool RepliesHidden { get; set; }
	private string? RepliesCssClass => RepliesHidden ? "is-hidden" : null;

	private void ToggleReplyVisibility() {
		RepliesHidden = !RepliesHidden;
	}
}
